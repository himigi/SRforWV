FFMPEG 강의록)

1장) 기초
What is FFmpeg?
오픈소스 프로젝트. 프로젝트의 이름임. 라이브러리와 프로그램의 총집체. 멀티미디어 파일과 스트림을 처리하기 위함. '스위스 아미 나이프' 정말 다양하게 아무곳에 쓰일 수 있고, 여전히 수많은 사람이 참여하고 있는 active 프로젝트.
FFprobe는 여러 스펙을 로그찍어주는 명령어
FFplay는 재생시켜주는 명령어

‘미디어’는 이미지, 오디오, 비디오
이미지는 픽셀부터 시작 픽셀은 2D에서 가장 작은 점 RGB 혹은 YUV 등의 형식으로 색을 가짐 투명도도 가짐 (알파 데이터) 이미지는 이 픽셀의 모음 이미지 해상도. 이미지 퀄리티를 말함. 보통 가로x세로 픽셀 수로 말함.
오디오는 비트레이트, 프리퀀시, 채널이 있음.
비디오는 프레임, 프레임레이트, 압축(중복정보 제거.. 방식이 두가지 있음)

코덱과 컨테이너
코덱은 010101 인코딩과 디코딩 담당. 유명한 건 비디오는 H.264, H.265, 오디오는 AAC
컨테이너는 헤더와 순서와 트랙 등의 정보를 담고 있음. 
유명한 건 MP4, QuickTime/MOV, MXF(카메라 브로드캐스팅) 오디오에 유명한 컨테이너는 WAV, M4A  컨테이너 안에 비디오 코덱과 오디오 코덱이 있는 셈
왜 그렇게 많은 코덱이 있나요? 회사가 다양하고 다 각자의 pros and cons 있음

Transcoding
코덱 변경. from one codec to another
왜 하냐? 각 코덱의 이점이 달라서. 퀄리티, 압축률, 편집, 프리뷰, 스트리밍, 호환성 등..
그럼 Transmuxing은? 얘는 컨테이너 변경을 의미함. 코덱 변경이 아니라.  코덱은 지원해도 컨테이너를 지원 안 하는 경우도 있기 때문에 transmuxing 해줘야 함

그 외…
- TV Standard도 나뉨 (PAL/NTSC)
- FPS도 낮고 높을 수 있고 - 재생되는 횟수
- 비트레이트도 낮고 높을 수 있음 - 화질
- GOP(Group of Pictures)도 다를 수 있음. I프레임만 수집하면(I-frame only) 퀄리티가 높고 수정도 용이함. 그러나 B프레임과 P프레임도 수집하는 Long GOP의 경우는 압축률도 높고 인터넷 스트리밍에 있어서 강점일거임.
- 그 외엔 오버레이, 자막, 타임코드 등도 있음.

2장) 심화
Encoding
인코딩과 디코딩을 담당하는게 코덱이니까 코덱을 먼저 잘 알아야 함.
코덱을 고를 때에는, 압축률, 퀄리티vs사이즈, 스트리밍vs생성, 타겟으로 하는 것과의 호환성, FFmpeg과의 호환성을 고려해야함
모든 코덱과 컨테이너가 호환되는 것도 아님.

H.264 / AVC
가장 많이 쓰이는 비디오 인코딩 ‘방식’
libx264가 인코더고, h.264는 인코딩 방식

Rate control
CRF : 일정한 퀄리티, 일정하지 않은 비트레이트 (0-51)
two pass ABR : 일정하지 않은 퀄리티, 일정한 비트레이트(스트리밍에 유리)

스트리밍
전체를 다운받기 전에 일단 시작
대역폭 낭비 없이 어디로든 탐색 가능
네트워크 변화에 적응 가능
m3u8과 ts는 뭐지?
injest는 예를 들어 현재 카메라에서 녹화되는 영상이 실시간으로 서버로 들어가는 거(일종의 스트리밍이지만 입력이기 때문에 injest라고 부름)
distribution 혹은 last mile delivery는 반대로 서버에서 클라로 출력하는거. 이것도 일종의 스트리밍임.

프로토콜 _ RTMP, HTTP, SRT
각 프로토콜은 injest/distribution에 다른 장점이 있고 다 다른 특징이 있음.
RTMP는 TCP기반. 손실없음. 낮은 지연시간(latency), 어도비 플래시 플레이어. 아주 유명했지만, 스마트폰 시대 이후로 이제는 거의 사장. 플래시플레이어 더는 아무도 설치하지 않는다..
HTTP as streaming.. 가장 유명. TCP 기반. 방화벽에 차단되지 않을거다. 별도의 서버도 필요 없다. HTML5 등 웹기술의 발전도 계속되고 있음. 모든 브라우저가 MSE를 지원. 미디어소스익스텐션. 직접적인 스트리밍은 HLS, MPEG-DASH와 자바스크립트로 인해 가능해졌다. 플러그인도 필요없고 아주 유명. distribution에 있어서는 youtube netflix 등 제일 유명하다. 높은 지연. 하지만 injest에 있어서는 그닥 유명하지 않음. 그래도 발전되는 중
SRT secure reliable transport. UDP기반. 낮은지연. 심지어 RTMP보다 빠름. 핸드쉐이크 필요 없음. 에러처리 메커니즘 덕분에 네트워크 환경 변화에도 유연하다. distribution에 있어서는 거의 SRT가 사용될 수 없다. 아무 지원이 없음. 브라우저는 UDP를 지원하지 않는다. SRT는 injest 사이드에서 쓰임.

컨테이너 포맷 _ MP4, WebM, Ogg
MP4는 QuickTimePlayer/MOV와 구조가 같다.
MP4의 구조는 총 3개. 포인트는, 메타데이터를 미디어데이터 앞에 위치시킴으로써 스트리밍 및 검색 가능하게 만들 수 있음.

Adaptive Streaming
Adaptive Streaming은 segmented file에 의해서 가능함. 해상도에 따라 대역폭을 달리 설정.

HLS & DASH
Adaptive Streaming의 가장 대표적인 방법 두가지.
HLS 애플이 개발. 현재 세계에서 가장 유명. 소유권이 있음.
Dash. MPEG-DASH로 알려짐. 첫 국제 표준.

Manifest
adaptive streaming을 위해 chunk로 분절화해서 관리. manifest파일이 따로 있음. 순서와 관리를 위해.
HLS는 사파리에서는 내장, 다른 브라우저에서는 MSE가 필요, DASH는 MSE 다 필요.
코덱의 경우 HLS가 더 제한적. H.264/AVC, H.265/HEVC만 가능, DASH는 거의 다 됨.
컨테이너의 경우 HLS는 ts, fmp4가능하고 DASH는 fmp4만 가능
Manifest파일의 경우 HLS는 M3U8확장자. DASH는 MPD. 얘는 XML로..? 뭐라는지.

I P B frame
I프레임은 단독 이미지. 단독으로 디코드 될 수 있음
P프레임은 전체 데이터를 저장하지 않음. 이전 데이터와의 연결점
B프레임은 앞뒤 데이터와의 연결
I프레임간의 간격을 GOP Group of Pictures라고 부름
Segment가 길면 네트워크가 바뀌어도 기다려야함
애플은 6초 권장, 보통은 2~4초를
